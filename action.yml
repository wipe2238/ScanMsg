name:        'ScanMsg'
description: 'Fallout .msg files scanner'
author:      'Rotators'
branding:
 icon:  'eye'
 color: 'green'

# Same as running: ScanMsg.exe path/to/text/
#
# uses: wipe2238/ScanMsg@master
# with:
#  path: 'path/to/text/'

# Same as running ScanMsg.exe path/to/text/ --relaxed
#
# uses: wipe2238/ScanMsg@master
# with:
#  path:    'path/to/text/'
#  relaxed: 'true'

# Same as running: ScanMsg.exe path/to/text/
#
# uses: wipe2238/ScanMsg@master
# with:
#  path:       'path/to/text/'
#  executable: 'path/to/ScanMsg.exe'

# Same as running: cd path/to/text/ && ScanMsg.exe
#
# uses: wipe2238/ScanMsg@master
# with:
#  workdir: 'path/to/text/'

inputs:
  path:
   description: ''
   required:    false

  no-exitcode:
   required:    false
   default:     'true'
   description: 'Action will never fail build, even if errors are found'
  relaxed:
   description: ''
   required:    false
   default:     'false'
  translations:
   description: ''
   required:    false
   default:     ''

  workdir:
   description: ''
   required:    false
   default:     ${{ github.workspace }}

  executable:
   description: ''
   required:    false
   default:     'upstream'
   deprecationMessage: 'will be removed in v0.7'

runs:
 using: 'composite'
 steps:

 - name:  Validate options
   id:    options
   run:   |
          if [[ "${{ inputs.no-exitcode }}" != "true" ]] && [[ "${{ inputs.no-exitcode }}" != "false" ]]; then
             echo "ERROR: invalid input 'no-exitcode' : '${{ inputs.no-exitcode }}'"
             echo "ERROR: available values: 'true', 'false'"
             exit 1
          elif [[ "${{ inputs.no-exitcode }}" == "true" ]]; then
             echo "::set-output name=no-exitcode::--no-exitcode"
          fi

          if [[ "${{ inputs.relaxed }}" != "true" ]] && [[ "${{ inputs.relaxed }}" != "false" ]]; then
             echo "ERROR: invalid input 'relaxed' : '${{ inputs.relaxed }}'"
             echo "ERROR: available values: 'true', 'false'"
             exit 1
          elif [[ "${{ inputs.relaxed }}" == "true" ]]; then
             echo "::set-output name=relaxed::--relaxed"
          fi

          if [[ ! -f "${{ inputs.executable }}" ]]; then
             if [[ "${{ inputs.executable }}" == "upstream" ]]; then
                echo "::set-output name=executable::dotnet run --project ${GITHUB_ACTION_PATH//\\//}/ScanMsg/ScanMsg.NET5.csproj --"
             else
                echo "ERROR: invalid input 'executable' : '${{ inputs.executable }}'"
                echo "ERROR: file does not exists"
                exit 1
             fi
          else
             echo "::set-output name=executable::${GITHUB_WORKSPACE//\\//}/${{ inputs.executable }}"
          fi

          #

          if [[ "${{ inputs.relaxed }}" == "true" ]] && [[ "${{ inputs.translations }}" != "" ]]; then
             echo "ERROR: validating translations in relaxed mode not implemented (yet?)"
             exit 1
              fi
   shell: bash

 - name:  Run validation
   run:   |
          if [[ "${{ inputs.translations }}" != "" ]]; then
             ${{ steps.options.outputs.executable }} --language-base ${{ inputs.path }} --translations ${{ inputs.translations }}
          else
             ${{ steps.options.outputs.executable }} ${{ inputs.path }} ${{ steps.options.outputs.relaxed }} ${{ steps.options.outputs.no-exitcode }}
          fi
          rm -f ScanMsg.log
   shell: bash
   working-directory: ${{ inputs.workdir }}
   env:
    DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
    DOTNET_NOLOGO:               'true'
